import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from sklearn.preprocessing import StandardScaler # This package is used for standardization a data set.
from sklearn.decomposition import PCA  # This package is used for apply one descomposition of the multiivariate data
# to principal components.

# Call Excel Data to py.
data = pd.read_excel('calibrations.xlsx')

data2 = np.array(data.drop(columns=data.columns[0],axis=1 ))

#Standardizing

x = StandardScaler().fit_transform(data2)

pca = PCA(n_components=2)
principalComponents = pca.fit_transform(x)
Dataf = pd.DataFrame(data = principalComponents
             , columns = ['principal component 1', 'principal component 2'])


#Join Target to Absorbance date
Datatarget = pd.concat([Dataf, data[['Target']]], axis = 1)



fig = plt.figure(figsize = (5,5))
plt.xlabel('PCA 1')
plt.ylabel('PCA 2')
plt.title('Principal Component Analysis (PCA)')
targets = [40, 45, 50, 55, 60]
colors = ['red', 'green', 'blue', 'yellow', 'cyan']
for target, color in zip(targets,colors):
    Indicatetarget = Datatarget['Target'] == target
    plt.scatter(Datatarget.loc[Indicatetarget, 'principal component 1']
               ,Datatarget.loc[Indicatetarget, 'principal component 2'])

plt.legend(targets)
plt.show()

#print((pca.explained_variance_)) #Determination of variance by PCA
